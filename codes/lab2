%CODE1 Respuesta al impulso y en frecuencia del filtro de coseno alzado

% Parámetros generales
f0 = 1; % Frecuencia central
B = 2 * f0; % Ancho de banda absoluto
t = linspace(0, 5, 1000); % Tiempo >= 0
f = linspace(-2*B, 2*B, 1000); % Frecuencia

% Valores de roll-off
alpha_values = [0, 0.25, 0.75, 1];

figure;
for i = 1:length(alpha_values)
alpha = alpha_values(i);
fDelta = alpha * f0;
f1 = f0 - fDelta;

% Respuesta en frecuencia He(f)
He = zeros(size(f));
for k = 1:length(f)
fk = abs(f(k));
if fk < f1
He(k) = 1;
elseif fk < f0 + fDelta
He(k) = 0.5 * (1 + cos(pi * (fk - f1) / (2 * fDelta)));
else
He(k) = 0;
end
end

% Respuesta al impulso he(t)
he = 2*f0 * (sinc(2*f0*t)) .* (cos(2*pi*fDelta*t) ./ (1 - (4*fDelta*t).^2));
he(isnan(he)) = 2*f0; % Límite cuando el denominador da cero

% Gráficos
subplot(4, 2, 2*i-1);
plot(t, he);
title(['Respuesta al impulso - α = ', num2str(alpha)]);
xlabel('t'); ylabel('he(t)');

subplot(4, 2, 2*i);
plot(f, He);
title(['Respuesta en frecuencia - α = ', num2str(alpha)]);
xlabel('f'); ylabel('He(f)');
end


%CODE2 Diagrama de ojo para distintos valores de α

close all;
clear;
clc;

% Parámetros
num_bits = 104;
bitrate = 1e3; % tasa de bits (puede ajustarse)
Fs = 16 * bitrate; % Frecuencia de muestreo (16 muestras por bit)
samples_per_symbol = Fs / bitrate;
t = 0:1/Fs:(num_bits/bitrate);
bits = randi([0 1], 1, num_bits); % bits aleatorios
symbols = 2*bits - 1; % NRZ-L: 0 -> -1, 1 -> 1
tx = repelem(symbols, samples_per_symbol); % señal expandida

% Valores de roll-off
alpha_values = [0, 0.25, 0.75, 1];

figure;
for i = 1:length(alpha_values)
alpha = alpha_values(i);

% Diseño del filtro Raised Cosine (Tx)
span = 6; % número de símbolos que abarca el filtro
rrc_filter = rcosdesign(alpha, span, samples_per_symbol, 'normal');

% Filtrado de la señal
tx_filtered = conv(tx, rrc_filter, 'same');

% Añadir ruido AWGN
SNR = 30; % relación señal/ruido en dB
rx = awgn(tx_filtered, SNR, 'measured');

% Diagrama de ojo
subplot(2, 2, i);
eyediagram(rx, 2*samples_per_symbol); % 2 símbolos por ventana
title(['Diagrama de Ojo - \alpha = ', num2str(alpha)]);
end


%CODE3 Solapamiento de pulsos para visualizar ISI

% Parámetros comunes
f0 = 1;                          
Ts = 1 / (2 * f0);              
span = 3;                       
t = linspace(-span*Ts*2, span*Ts*2, 1000); 
alpha_values = [0, 0.25, 0.75, 1]; 

% Figura general
figure;

for i = 1:length(alpha_values)
    alpha = alpha_values(i);

    % Función del pulso coseno alzado
    raised_cosine = @(t) 2*f0 .* sinc(2*f0*t) .* ...
        (cos(2*pi*alpha*f0*t) ./ (1 - (4*alpha*f0*t).^2));

    % Manejar posibles divisiones por cero
    t_eps = 1e-10;
    denom_zero = abs(1 - (4*alpha*f0*t).^2) < t_eps;
    rc = raised_cosine(t);
    rc(denom_zero) = 2*f0 * sinc(2*f0*t(denom_zero));  % Límite

    % Suma de pulsos desplazados
    suma_pulsos = zeros(size(t));
    for k = -span:span
        suma_pulsos = suma_pulsos + raised_cosine(t - k*Ts);
    end

    % Subplot
    subplot(2, 2, i);
    plot(t, suma_pulsos, 'LineWidth', 1.5); hold on;
    yline(0, '--k');
    for k = -span:span
        xline(k*Ts, '--', 'Color', [0.6 0.6 0.6]);
    end
    title(['Solapamiento - \alpha = ', num2str(alpha)]);
    xlabel('Tiempo t'); ylabel('Amplitud');
    grid on;
end

sgtitle('Solapamiento de Pulsos Coseno Alzado para distintos valores de \alpha');
